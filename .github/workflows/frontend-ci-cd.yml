name: Frontend CI/CD

on:
  push:
    branches: [main, develop]
    paths:
      - "frontend/**"
      - ".github/workflows/frontend-ci-cd.yml"
  pull_request:
    branches: [main, develop]
    paths:
      - "frontend/**"
      - ".github/workflows/frontend-ci-cd.yml"
  workflow_dispatch: # Allow manual triggering

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: "./frontend/package-lock.json"

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint || echo "Linting failed but continuing..."

      - name: Build
        run: npm run build

      - name: Test
        run: npm test -- --coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          directory: ./frontend/coverage
          flags: frontend
          token: ${{ secrets.CODECOV_TOKEN || '' }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist
          retention-days: 7

  deploy-staging:
    needs: build-and-test
    if: github.ref == 'refs/heads/develop' && github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist

      # Add your deployment steps here
      # For example, deploying to Netlify, Vercel, or AWS S3
      - name: Deploy to staging
        run: echo "Deploying to staging environment"
        # Replace with actual deployment commands

  deploy-production:
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    environment: production

    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist

      # Add your deployment steps here
      # For example, deploying to Netlify, Vercel, or AWS S3
      - name: Deploy to production
        run: echo "Deploying to production environment"
        # Replace with actual deployment commands
